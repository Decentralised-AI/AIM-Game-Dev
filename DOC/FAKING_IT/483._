    
    $_THIS_SECTION_COMMING_IN_VIDEO_4_8_3_$

    //:TAG[ unit-tests-section | unit_tests_section ]://         // [482]
    //:TAG[ unit_tests_section | test-my-units      ]://         // [482]
                                                                 // [---]
    //:#_MORE_FILE_FORMAT_LUTS_#:[482]:------------------://     // [482]
    {                                                            // [482]
                                                                 // [482]
        let R =( 0 ); //: Ring of data around RGBA896 :::://     // [482]
        let _ =( 0 ); //: Thumbnails with valid data  :::://     // [482]
                                                                 // [482]
        let voidmap =(new Uint8Array([                           // [482]
                                                                 // [482]
            R , R , R , R , R , R , R                            // [482]
        ,   R , 1 , 1 , _ , 1 , 1 , R                            // [482]
        ,   R , 1 , _ , _ , _ , 1 , R                            // [482]
        ,   R , _ , _ , _ , _ , _ , R                            // [482]
        ,   R , 1 , _ , _ , _ , 1 , R                            // [482]
        ,   R , 1 , 1 , _ , 1 , 1 , R                            // [482]
        ,   R , R , R , R , R , R , R                            // [482]
        ]));;                                                    // [482]
        let birdhol =(new Uint8Array([  ////////////////         // [482]
                                                                 // [482]
            0 , 0 , 0 , 0                                        // [482]
        ,   0 , 0 , 0 , 0                                        // [482]
        ,   0 , 0 , 0 , 0                                        // [482]
        ,   0 , 0 , 0 , 0                                        // [482]
                                                                 // [482]
        ]));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         // [482]
        const F =( 5 );                                          // [482]
        let birdkey =(new Uint8Array([                           // [482]
                                                                 // [482]
            F , F , F , F                                        // [482]
        ,   F , F , F , F                                        // [482]
        ,   F , F , F , F                                        // [482]
        ,   F , 3 , 3 , 3 //:LAST_3_ARE_3://                     // [482]
                                                                 // [482]
        ]));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         // [482]
                                                                 // [482]
        let c4x , c4x_o_s ; //: With & without offset://         // [482]
        let c4y , c4y_o_s ; //: With & without offset://         // [482]
                                                                 // [482]
        let offsetx ; //: Offset In Cells - X Axis ::://         // [482]
        let offsety ; //: Offset In Cells - Y Axis ::://         // [482]
                                                                 // [482]
        let c49kind ; //: Kind of C49 cell you are on://         // [482]
        let     haf ; //: Top or bottom 4x2 ?        ://         // [482]
        let     c49 ; //: All cells on 7x7 grid.     ://         // [482]
        let     c4i ; //: [c4x,c4y] as 1D-index      ://         // [482]
        let c4i_o_s ; //: Offsetted version of c4i   ://         // [482]
        let     vod ; //: Void Thumnail Cell ? ::::::://         // [482]
                                                                 // [482]
        for( haf = 0 ; haf <=(2 -1) ; haf++ ){                   // [482]
        for( c49 = 0 ; c49 <=(49-1) ; c49++ ){                   // [482]
                                                                 // [482]
            offsetx=( 0 );                                       // [482]
            offsety=( 0 );                                       // [482]
                                                                 // [482]
            c4x = d_c49_c4x[ c49 ];                              // [482]
            c4y = d_c49_c4y[ c49 ];                              // [482]
            vod = voidmap[   c49 ];                              // [482]
                                                                 // [482]
            if( vod <= 0             ){                          // [482]
            if( c4x >= 0 && c4y >= 0 ){                          // [482]
                                                                 // [482]
                c49kind = d_c49_c49kind[ c49 ];                  // [482]
                                                                 // [482]
                //:#_PREFAB_4X2_RECT_#:[482]:--------://         // [482]
                if( 1 === haf ){                                 // [482]
                    if( c49kind === c_c49_pf8 ){                 // [482]
                        offsetx=( 0 );                           // [482]
                        offsety=( 2 );                           // [482]
                    };;                                          // [482]
                };;                                              // [482]
                //:--------:#_PREFAB_4X2_RECT_#:[482]://         // [482]
                                                                 // [482]
                c4x_o_s =( c4x + offsetx );                      // [482]
                c4y_o_s =( c4y + offsety );                      // [482]
                                                                 // [482]
                c4i     =( c4x     + ( c4y     * 4 ) );          // [482]
                c4i_o_s =( c4x_o_s + ( c4y_o_s * 4 ) );          // [482]
                (birdhol[  c4i_o_s ])++ ;                        // [482]
                                                                 // [482]
                if( c49kind === c_c49_l16 ){                     // [482]
                    got_c49   = d_l16_c49[ c4i ];                // [482]
                };;                                              // [482]
                if( c49kind === c_c49_pf8 ){                     // [482]
                    got_c49   = d_pf8_c49[ c4i ];                // [482]
                };;                                              // [482]
                if( c49kind === c_c49_t25 ){                     // [482]
                //- got_c49   = d_t25_c49[ c4i ]; -//            // [482]
                    got_c49   = d_thumbuf_c4i_c49[ c4i ];        // [482]
                };;                                              // [482]
                                                                 // [482]
                if( 0xFF === got_c49 ){                          // [482]
                    /** **************************** **/         // [482]
                    /** Okay, it doesn't map back to **/         // [482]
                    /** any meaningful data. ******* **/         // [482]
                    /** **************************** **/         // [482]
                }else                                            // [482]
                if( got_c49 != c49 ){                            // [482]
                                                                 // [482]
                    LOG( "[c49kind]:" , c49kind    );            // [482]
                                                                 // [482]
                    LOG( "[INN:c49]:" ,     c49    );            // [482]
                    LOG( "[got:c49]:" , got_c49    );            // [482]
                                                                 // [482]
                    LOG( "[::::c4i]:" ,     c4i    );            // [482]
                    LOG( "[::::c4x]:" ,     c4x    );            // [482]
                    LOG( "[::::c4y]:" ,     c4y    );            // [482]
                                                                 // [482]
                    ERR("[@_DNPG_DNC2D_@:YEAR_2022]");           // [482]
                };;                                              // [482]
            };;};;                                               // [482]
        };;};;                                                   // [482]
        for( c49 = 0 ; c49 <=(49-1) ; c49++ ){                   // [482]
                                                                 // [482]
            if( birdkey[ c49 ] != birdhol[ c49 ] ){              // [482]
                                                                 // [482]
                let e_b=( birdkey[ c49 ] );                      // [482]
                                                                 // [482]
                LOG( "[c49]:" , c49 );                           // [482]
                LOG( "[birdkey[c49]]:" , birdkey[c49] );         // [482]
                LOG( "[birdhol[c49]]:" , birdhol[c49] );         // [482]
                                                                 // [482]
                if( 5 === e_b ){ //:@e_b@:ExpectedBirds::://     // [482]
                                                                 // [482]
                    ERR("[$_WHY_NOT_FIVE_BIRDS_$]");             // [482]
                }else                                            // [482]
                if( 3 === e_b ){ //:@e_b@:ExpectedBirds::://     // [482]
                                                                 // [482]
                    ERR("[$_WHY_NOT_THREE_BIRDS_$]");            // [482]
                };;                                              // [482]
                                                                 // [482]
                ERR("[WRONG_NUMBER_OF_BIRDS:2022]");             // [482]
            };;                                                  // [482]
        };;                                                      // [482]
                                                                 // [482]
    }                                                            // [482]
    //:------------------:#_MORE_FILE_FORMAT_LUTS_#:[482]://     // [482]







    #_MORE_FILE_FORMAT_LUTS_# :-------------------------------+  // [482]
                                                              |  // [482]
        First I wrote all the data I thought I would need     |  // [482]
        for serialization and de-serialization of my          |  // [482]
        custom previewable file format. ( FILE896 )...        |  // [482]
                                                              |  // [482]
        But then as I was writing the function code,          |  // [482]
        I grabbed for a lookup table I needed, and            |  // [482]
        that lookup table did not exist.                      |  // [482]
                                                              |  // [482]
        This section is that story.                           |  // [482]
                                                              |  // [482]
        But anyways, yeah, we added more data and we          |  // [482]
        need to make sure that data is correct before         |  // [482]
        we start using it.                                    |  // [482]
                                                              |  // [482]
        Also, interesting thought :                           |  // [482]
                                                              |  // [482]
        DOD is not compatible with TDD.                       |  // [482]
                                                              |  // [482]
    :---------------------------------------------------------+  // [482]
    #_CATEGORIES_OF_C49_CELLS_# :-----------------------------+  // [482]
                                                              |  // [482]
        I know we have a lookup table for this, but           |  // [482]
        I forget what I called it. Adding these               |  // [482]
        monkey wrench macros to help me find it....           |  // [482]
                                                              |  // [482]
        I think it was called: [ d _ c49 _ c49kind ]          |  // [482]
                                                              |  // [482]
    :---------------------------------------------------------+  // [482]
    #_PREFAB_4X2_RECT_# :-------------------------------------+  // [482]
                                                              |  // [482]
                                                              |  // [482]
        Prefab cells ,no offset:     2 Cell offset prefabs:   |  // [482]
                                                              |  // [482]
        +---+ +---+ +---+ +---+      +---+ +---+ +---+ +---+  |  // [482]
        |pf0| |pf1| |pf2| |pf3|      |   | |   | |   | |   |  |  // [482]
        +---+ +---+ +---+ +---+      +---+ +---+ +---+ +---+  |  // [482]
        +---+ +---+ +---+ +---+      +---+ +---+ +---+ +---+  |  // [482]
        |pf4| |pf5| |pf6| |pf7|      |   | |   | |   | |   |  |  // [482]
        +---+ +---+ +---+ +---+      +---+ +---+ +---+ +---+  |  // [482]
        +---+ +---+ +---+ +---+      +---+ +---+ +---+ +---+  |  // [482]
        |   | |   | |   | |   |      |pf0| |pf1| |pf2| |pf3|  |  // [482]
        +---+ +---+ +---+ +---+      +---+ +---+ +---+ +---+  |  // [482]
        +---+ +---+ +---+ +---+      +---+ +---+ +---+ +---+  |  // [482]
        |   | |   | |   | |   |      |pf4| |pf5| |pf6| |pf7|  |  // [482]
        +---+ +---+ +---+ +---+      +---+ +---+ +---+ +---+  |  // [482]
                                                              |  // [482]
        This is why each[birdhol] ( Bird Hole ) cell          |  // [482]
        has 2 entries in it total. Because we do              |  // [482]
        two passes to make sure prefabs cover all off         |  // [482]
        the cells in 4x4 when we do a pass with               |  // [482]
        and without the offset.                               |  // [482]
                                                              |  // [482]
        Wait... That means... Each cell is tallied to         |  // [482]
        be.... 4 , not 2.... Worse than that....              |  // [482]
                                                              |  // [482]
        Not all of those thumbnail cells are                  |  // [482]
        comming back to us, are they?                         |  // [482]
                                                              |  // [482]
        We might need an answer key here.                     |  // [482]
                                                              |  // [482]
    :---------------------------------------------------------+  // [482]
    #_WHY_NOT_FIVE_BIRDS_# :----------------------------------+  // [482]
    $_WHY_NOT_FIVE_BIRDS_$ :----------------------------------+  // [482]
    @_WHY_NOT_FIVE_BIRDS_@ :----------------------------------+  // [482]
                                                              |  // [482]
        Okay... So I thought this was the case, but           |  // [482]
        it isn't because when mapping back and forth          |  // [482]
        between thumbnail cells, the last 3 cells are         |  // [482]
        not filled... But... Some of the cells should         |  // [482]
        follow this rule.                                     |  // [482]
                                                              |  // [482]
        1st pass :   ( Prefabs on TOP HALF )                  |  // [482]
        +------------+                                        |  // [482]
        |     3      |                                        |  // [482]
        +------------+                                        |  // [482]
        |     2      |                                        |  // [482]
        +------------+                                        |  // [482]
                                                              |  // [482]
        2nd pass :   ( Prefabs on BOT HALF )                  |  // [482]
        +------------+                                        |  // [482]
        |     2      |                                        |  // [482]
        +------------+                                        |  // [482]
        |     3      |                                        |  // [482]
        +------------+                                        |  // [482]
                                                              |  // [482]
        SO.....                                               |  // [482]
                                                              |  // [482]
        +------------+     +------------+      +------------+ |  // [482]
        |     3      |     |     2      |      |     5      | |  // [482]
        +------------+  +  +------------+ ===> +------------+ |  // [482]
        |     2      |     |     3      |      |     5      | |  // [482]
        +------------+     +------------+      +------------+ |  // [482]
                                                              |  // [482]
    :---------------------------------------------------------+  // [482]
    #_WHY_NOT_THREE_BIRDS_# :---------------------------------+  // [482]
    $_WHY_NOT_THREE_BIRDS_# :---------------------------------+  // [482]
                                                              |  // [482]
                                    +---+ +---+ +---+ +---+   |  // [482]
        Not all thumbnail cells     | 0 | | 1 | | 2 | | 3 |   |  // [482]
        in RGBA896 map to data      +---+ +---+ +---+ +---+   |  // [482]
        in master memory cell.      +---+ +---+ +---+ +---+   |  // [482]
                                    | 4 | | 5 | | 6 | | 7 |   |  // [482]
        [ ][ ][ ][ ][ ][ ][ ]       +---+ +---+ +---+ +---+   |  // [482]
        [ ]      [0]      [ ]       +---+ +---+ +---+ +---+   |  // [482]
        [ ]   [1][2][3]   [ ]       | 8 | | 9 | | A | | B |   |  // [482]
        [ ][4][5][6][7][8][ ]       +---+ +---+ +---+ +---+   |  // [482]
        [ ]   [9][A][B]   [ ]       +---+ +---+ +---+ +---+   |  // [482]
        [ ]      [C]      [ ]       | C | |VTD| |VTD| |VTD|   |  // [482]
        [ ][ ][ ][ ][ ][ ][ ]       +---+ +---+ +---+ +---+   |  // [482]
                                                              |  // [482]
        @VTD@ : Void_Thumbnail_Data (Void==There_Is_None)     |  // [482]
                                                              |  // [482]
        Thus, the bird hole totals  +---------------------+   |  // [482]
        on those last 3 cells       | #     #     #     # |   |  // [482]
        should be 2 less than the   |                     |   |  // [482]
        count of 5 we are expecting |                     |   |  // [482]
        on all of the other cells.  | #     #     #     # |   |  // [482]
                                    |                     |   |  // [482]
                                    |                     |   |  // [482]
                                    | #     #     #     # |   |  // [482]
                                    |   +-----------------+   |  // [482]
                                    |   | +---+ +---+ +---+   |  // [482]
                                    | # | |_3_| |_3_| |_3_|   |  // [482]
                                    +---+ +---+ +---+ +---+   |  // [482]
                                                              |  // [482]
    :---------------------------------------------------------+  // [482]
    :---------------------------------------------------------+  // [482]
    #YES_THUMBU# :--------------------------------------------+  // [482]
    #NOT_THUMBU# :--------------------------------------------+  // [482]
                                                              |  // [482]
        @YES_THUMBU@ : These thumbnail cells map to           |  // [482]
                     : underlying level-data cells within     |  // [482]
                     : a levelpack encoded in 512_x_512       |  // [482]
                     : master memory cell.                    |  // [482]
                                                              |  // [482]
        @NOT_THUMBU@ : These thumbnail cells ARE NOT          |  // [482]
                     : BACKED BY ANY UNDERLYING DATA.         |  // [482]
                     : _____NOT____ backed by data!!!         |  // [482]
                                                              |  // [482]
        @THUMBU@ :::: Thumbnail buffer data.                  |  // [482]
    :---------------------------------------------------------+  // [482]
    :---------------------------------------------------------+  // [482]
    @_DNPG_DNC2D_@ : DoNotPassGo_DoNotCollect200Dollars          // [482]
                                                                 // [482]
