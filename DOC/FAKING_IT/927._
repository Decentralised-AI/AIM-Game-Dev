        //:#_EFC_SPK_VARS_#:[927]:-----------------------://     // [927]
                                                                 // [927]
            const usehunk =( 0 ); //: USE_HUNKER ? ://           // [927]
                                                                 // [927]
        //:-----------------------:#_EFC_SPK_VARS_#:[927]://     // [927]
        //:#_STRIP_FOR_THE_HUNK_#:[927]:-----------------://     // [927]
                                                                 // [927]
            const r13 =( i_r13 );                                // [927]
            const x64 =( i_x64 );                                // [927]
            const y64 =( i_y64 );                                // [927]
            const dpi =( i_dpi );                                // [927]
            const v16 =( i_v16 );                                // [927]
                                                                 // [927]
        //:-----------------:#_STRIP_FOR_THE_HUNK_#:[927]://     // [927]
        //:#_SPARK_EXPLOSION_SHAPE_#:[927]:--------------://     // [927]
                                                                 // [927]
            let es4 =( d_rulbomb_v16_es4[ v16 ] );               // [927]
                                                                 // [927]
        //:--------------:#_SPARK_EXPLOSION_SHAPE_#:[927]://     // [927]
        //:#_GET_ARMS_#:[927]:---------------------------://     // [927]
                                                                 // [927]
            let ax0 =( d_rulbomb_v16_x_0[ v16 ] );               // [927]
            let ax1 =( d_rulbomb_v16_x_1[ v16 ] );               // [927]
            let ay0 =( d_rulbomb_v16_y_0[ v16 ] );               // [927]
            let ay1 =( d_rulbomb_v16_y_1[ v16 ] );               // [927]
                                                                 // [927]
        //:---------------------------:#_GET_ARMS_#:[927]://     // [927]
        //:#_INDEPENDENT_WOMAN_#:[927]:------------------://     // [927]
                                                                 // [927]
            let lx0 =( x64 - ax0 );//: LEF_INCLUSIVE_BOU ://     // [927]
            let lx1 =( x64 + ax1 );//: RIG_INCLUSIVE_BOU ://     // [927]
            let ly0 =( y64 - ay0 );//: TOP_INCLUSIVE_BOU ://     // [927]
            let ly1 =( y64 + ay1 );//: BOT_INCLUSIVE_BOU ://     // [927]
                                                                 // [927]
            if( 1                                                // [927]
            &&  ( lx0 >=( 0x00 ) )//:$_BLAST_BOUNDED_X0_$://     // [927]
            &&  ( lx1 <=( 64-1 ) )//:$_BLAST_BOUNDED_X1_$://     // [927]
            &&  ( ly0 >=( 0x00 ) )//:$_BLAST_BOUNDED_Y0_$://     // [927]
            &&  ( ly1 <=( 64-1 ) )//:$_BLAST_BOUNDED_Y1_$://     // [927]
            ){                                                   // [927]
                usehunk=( 0-1 /** DONT_USE_HUNKER **/ );         // [927]
            }else{                                               // [927]
                usehunk=( 0+1 /** WE_NEED_THEHUNK **/ );         // [927]
            };;                                                  // [927]
        //:------------------:#_INDEPENDENT_WOMAN_#:[927]://     // [927]
        //:#_I_DONT_NEED_NO_ONE_#:[927]:-----------------://     // [927]
        if( use_hunk <= 0 ){                                     // [927]
                                                                 // [927]
            ERR( "[MORE_LOGIC_IN_ANOTHER_VIDEO]" );              // [927]
                                                                 // [927]
        };;                                                      // [927]
        //:-----------------:#_I_DONT_NEED_NO_ONE_#:[927]://     // [927]
        //:#_LOAD_RE_USABLE_HUNK_STRUCTS_#:[927]:--------://     // [927]
        if( use_hunk >= 1 ){                                     // [927]
                                                                 // [927]
            d_hunkhot_lxy.llx=( x64 ); //: LEVEL_LOCAL_X ://     // [927]
            d_hunkhot_lxy.lly=( y64 ); //: LEVEL_LOCAL_Y ://     // [927]
                                                                 // [927]
            d_hunkhot_axy.ax0=( ax0 ); //: ARM_MAG : LEF ://     // [927]
            d_hunkhot_axy.ax1=( ax1 ); //: ARM_MAG : RIG ://     // [927]
            d_hunkhot_axy.ay0=( ay0 ); //: ARM_MAG : TOP ://     // [927]
            d_hunkhot_axy.ay1=( ay1 ); //: ARM_MAG : BOT ://     // [927]
                                                                 // [927]
        };;                                                      // [927]
        //:--------:#_LOAD_RE_USABLE_HUNK_STRUCTS_#:[927]://     // [927]
        //:#_CALL_THE_HUNK_:[927]:-----------------------://     // [927]
        //:                                              ://     // [927]
        //:     INDIRECTLY_CALLS_HIS_BOYS :              ://     // [927]
        //:                                              ://     // [927]
        //:     0. HUNKRIN : Chunks RIN style explosions ://     // [927]
        //:     1. HUNKLAZ : Chunks LAZ style explosions ://     // [927]
        //:     2. HUNKJAX : Chunks JAX style explosions ://     // [927]
        //:     3. HUNKBOX : Chunks BOX style explosions ://     // [927]
        //:                                              ://     // [927]
        //:     ( ORDERED BY ES4 ENUM )                  ://     // [927]
        //:----------------------------------------------://     // [927]
        if( use_hunk >= 1 ){                                     // [927]
                                                                 // [927]
            const lxy =( d_hunkhot_lxy );                        // [927]
            const axy =( d_hunkhot_axy );                        // [927]
            const huk =( d_hunkhot_huk );                        // [927]
                                                                 // [927]
            F_HUNKHOT_R13_TE7_ES4_LXY_AXY_HUK(                   // [927]
                      r13,te7,es4,lxy,axy,huk );;                // [927]
                                                                 // [927]
        };;                                                      // [927]
        //:-----------------------:#_CALL_THE_HUNK_:[927]://     // [927]
        //:#_DO_STUFF_WITH_THE_HUNK_#:[927]:-------------://     // [927]
        if( use_hunk >= 1 ){ //:::::::::[ TERMINAL_HUNK ]://     // [927]
                                                                 // [927]
            for( idk ; i_dont_fucking_know_yet ; idk ){          // [927]
                                                                 // [927]
                r13=( i_dont_know_yet );                         // [927]
                x64=( i_dont_know_yet );                         // [927]
                y64=( i_dont_know_yet );                         // [927]
                v16=( i_dont_know_yet );                         // [927]
                                                                 // [927]
                F_BOMSIMP_EFC_AIB_R13_X64_Y64_DPI_V16(           // [927]
                                  r13,x64,y64,dpi,v16 );         // [927]
                                                                 // [927]
            };;                                                  // [927]
        };; //::::::::::::::::::::::::::[ TERMINAL_HUNK ]://     // [927]
        //:-------------:#_DO_STUFF_WITH_THE_HUNK_#:[927]://     // [927]


    #_EFC_SPK_VARS_# :----------------------------------------+  // [927]
                                                              |  // [927]
        Any misc vars needed for this function go into        |  // [927]
        this section. This section exists to prevent          |  // [927]
        the proliferation of variable declaration sections.   |  // [927]
                                                              |  // [927]
    :----------------------------------------: #_EFC_SPK_VARS_#  // [927]
    #_STRIP_FOR_THE_HUNK_# :----------------------------------+  // [927]
                                                              |  // [927]
        Strip off the "i_" namespacing on the variables       |  // [927]
        to make the function calls less clunky and            |  // [927]
        easier to read.                                       |  // [927]
                                                              |  // [927]
    :----------------------------------: #_STRIP_FOR_THE_HUNK_#  // [927]
    [ HOTHUNK ]:----------------------------------------------+  // [927]
                                                              |  // [927]
        @HOTHUNK@ : HOTEL_HUNKER , __DO_NOT_USE__ ::::::::::  |  // [927]
                  : Don't use, use one of three   ::::::::::  |  // [927]
                  : "sub-hunkers" depending       ::::::::::  |  // [927]
                  :  on the explosion shape.      ::::::::::  |  // [927]
                                                              |  // [927]
        @HUNKJAX@ : HUNK_JAX , for JAX  style explosion.      |  // [927]
        @HUNKBOX@ : HUNK_BOX , for BOX  style explosion.      |  // [927]
        @HUNKRIN@ : HUNK_RIN , for RING style explosion.      |  // [927]
                                                              |  // [927]
    :----------------------------------------------:[ HOTHUNK ]  // [927]
    #_INDEPENDENT_WOMAN_# :-----------------------------------+  // [927]
                                                              |  // [927]
        In some cases, we might not need to use the HUNKER    |  // [927]
        to split up the blast because the blast is contained  |  // [927]
        to a single level. If that is the case , we should    |  // [927]
        avoid calling[ THE_HUNK / HUNKER ].                   |  // [927]
                                                              |  // [927]
                                                              |  // [927]
        [ INCLUSIVE_BOUND(S) ]:----------------------------+  |  // [927]
                                                           |  |  // [927]
            The inclusive bounds of the blast we are       |  |  // [927]
            trying to emit from the detonated bomb.        |  |  // [927]
                                                           |  |  // [927]
            @LEF_INCLUSIVE_BOU@  : LEFT___INCLUSIVE_BOUND  |  |  // [927]
            @RIG_INCLUSIVE_BOU@  : RIGHT__INCLUSIVE_BOUND  |  |  // [927]
            @TOP_INCLUSIVE_BOU@  : TOP____INCLUSIVE_BOUND  |  |  // [927]
            @BOT_INCLUSIVE_BOU@  : BOTTOM_INCLUSIVE_BOUND  |  |  // [927]
                                                           |  |  // [927]
        :----------------------------:[ INCLUSIVE_BOUND(S) ]  |  // [927]
                                                              |  // [927]
        $_BLAST_BOUNDED_X0_$ : Blast in bound on LEFT  ?      |  // [927]
        $_BLAST_BOUNDED_X1_$ : Blast in bound on RIGHT ?      |  // [927]
        $_BLAST_BOUNDED_Y0_$ : Blast in bound on TOP   ?      |  // [927]
        $_BLAST_BOUNDED_Y1_$ : Blast in bound on BOT   ?      |  // [927]
                                                              |  // [927]
    :-----------------------------------: #_INDEPENDENT_WOMAN_#  // [927]
    #_GET_ARMS_# :--------------------------------------------+  // [927]
                                                              |  // [927]
                         TAG[ GET_ARMS | GET_GUNS | GET_SWOLE ]  // [927]
                         TAG[ DO_YOU_EVEN_LIFT_BRO | BROHEIM  ]  // [927]
                                                              |  // [927]
        Get the arm lengths all all arms of our explosion.    |  // [927]
                                                              |  // [927]
        +----------------------------------------------+      |  // [927]
        | @ax0@ : Arm length to the [ LEF / LEFT     ] |      |  // [927]
        | @ax1@ : Arm length to the [ RIG / RIGHT    ] |      |  // [927]
        | @ay0@ : Arm length to the [ TOP / UPWARD   ] |      |  // [927]
        | @ay1@ : Arm length to the [ BOT / DOWNWARD ] |      |  // [927]
        |                                              |      |  // [927]
        | "[B]" : Blast center in this diagram.        |      |  // [927]
        |                                              |      |  // [927]
        +----------------------------------------------+      |  // [927]
        | EXAMPLE_BLAST :                              |      |  // [927]
        +----------------------------------------------+      |  // [927]
        |              [ ]         $_AX0_$ ===( 0+1 )  |      |  // [927]
        |              [ ]                             |      |  // [927]
        |              [ ]         $_AX1_$ ===( 0+2 )  |      |  // [927]
        |              [ ]                             |      |  // [927]
        |           [ ][B][ ][ ]   $_AY0_$ ===( 0+4 )  |      |  // [927]
        |              [ ]                             |      |  // [927]
        |              [ ]         $_AY1_$ ===( 0+8 )  |      |  // [927]
        |              [ ]                             |      |  // [927]
        |              [ ]                             |      |  // [927]
        |              [ ]                             |      |  // [927]
        |              [ ]                             |      |  // [927]
        |              [ ]                             |      |  // [927]
        |              [ ]                             |      |  // [927]
        +----------------------------------------------+      |  // [927]
                                                              |  // [927]
    :--------------------------------------------: #_GET_ARMS_#  // [927]
    #_SPARK_EXPLOSION_SHAPE_# :-------------------------------+  // [927]
                                                              |  // [927]
        Get the explosion shape to be emitted by our sparkpin.|  // [927]
                                                              |  // [927]
        @ES4@ : Explosion_Shape( of which there are 4 ) ::::  |  // [927]
                                                        ::::  |  // [927]
              : es4____rin : 0 :  RING FLAMES ::::::::::::::  |  // [927]
              : es4____laz : 1 : LAZER FLAMES ::::::::::::::  |  // [927]
              : es4____jax : 2 :   JAX FLAMES ::::::::::::::  |  // [927]
              : es4____box : 3 :   BOX FLAMES ::::::::::::::  |  // [927]
                                                              |  // [927]
    :-------------------------------: #_SPARK_EXPLOSION_SHAPE_#  // [927]
    [ CHUNK13 ]:----------------------------------------------+  // [927]
                                                              |  // [927]
        @CHUNK13@ : CHUNKS of which there can be 13 maximum.  |  // [927]
         1234567  : ( 13 max, often __LESS_CHUNKS__ )         |  // [927]
                                                              |  // [927]
        A datatype emitted by HUNKHOT system that             |  // [927]
        gives us all of the chunks we need to emit            |  // [927]
        blasts for.                                           |  // [927]
                                                              |  // [927]
    :----------------------------------------------:[ CHUNK13 ]  // [927]
    #_LOAD_RE_USABLE_HUNK_STRUCTS_# :-------------------------+  // [927]
                                                              |  // [927]
        Load re-usable data-cluster objects that are needed   |  // [927]
        to specify information to our hunker system.          |  // [927]
                                                              |  // [927]
        @ARM_MAG@ : Arm_Magnitude ( AKA : Arm [reach/length] )|  // [927]
                                                              |  // [927]
    :-------------------------: #_LOAD_RE_USABLE_HUNK_STRUCTS_#  // [927]
    #_CALL_THE_HUNK_# :---------------------------------------+  // [927]
                                                              |  // [927]
        Call[ THE_HUNK ]and[ THE_HUNK ]will take care of      |  // [927]
        you. The hunk will split you in two. Or maybe         |  // [927]
        three chunks. Or maybe even 13 maximum if you         |  // [927]
        get very unlucky.                                     |  // [927]
                                                              |  // [927]
        But for real, we need to chunk our explosion into     |  // [927]
        up to FOUR sub-explosion rectangles so that           |  // [927]
        we can straddle the boarders of the rooms             |  // [927]
        within the hotel without corrupting data.             |  // [927]
                                                              |  // [927]
    :---------------------------------------: #_CALL_THE_HUNK_#  // [927]
    #_DO_STUFF_WITH_THE_HUNK_# :------------------------------+  // [927]
                                                              |  // [927]
        Loop through all of the hunks and dispatch the        |  // [927]
        blast sectors as needed. Hunking data is...           |  // [927]
        Going to be a lot of calculations...                  |  // [927]
                                                              |  // [927]
        So... we should DIRECTLY_CALL :                       |  // [927]
                                                              |  // [927]
        [ F_BOMSIMP_EFC_AIB_R13_X64_Y64_DPI_V16 ]             |  // [927]
                                                              |  // [927]
        If we realize the explosion is 100% in bound.         |  // [927]
        ... Or should we ? ...                                |  // [927]
                                                              |  // [927]
        YES... Because then we can tell when the              |  // [927]
        hunker is and is not used by emitting explosions      |  // [927]
        that we know are within the bounds of the             |  // [927]
        current level, the emit explosions                    |  // [927]
        STRADDLING_TWO_OR_MORE_LEVELS and see                 |  // [927]
        if it behaves correctly.                              |  // [927]
                                                              |  // [927]
        @TERMINAL_HUNK@ : Just a unique label on the          |  // [927]
                        : sqiggle brackets of our             |  // [927]
                        : gaurd clause.                       |  // [927]
                                                              |  // [927]
    :------------------------------: #_DO_STUFF_WITH_THE_HUNK_#  // [927]