    [764] : Attempt to re-distribute the[ ru_dil ]        :::::  // [764]
          : sample points within the[ glass_panel_tile ]  :::::  // [764]
          : so that the density of points becomes :       :::::  // [764]
          :                                               :::::  // [764]
          :  te7==0 : Density is 1/01 concentration( MULT_01 ):  // [764]
          :  te7==1 : Denisty is 1/02 concentration( MULT_02 ):  // [764]
          :  te7==2 : Denisty is 1/04 concentration( MULT_04 ):  // [764]
          :  te7==3 : Denisty is 1/08 concentration( MULT_08 ):  // [764]
          :  te7==4 : Denisty is 1/16 concentration( MULT_16 ):  // [764]
          :  te7==5 : Denisty is 1/32 concentration( MULT_32 ):  // [764]
          :  te7==6 : Denisty is 1/64 concentration( MULT_64 ):  // [764]

            //:#_WHAT_ARE_MY_BOUNDS_#:[764]:-------------://     // [764][-------------]
                                                                 // [764][-------------]
                U32 oob=(( i_u32_dun / u_9 )*u_9);               // [764][MOV][763][---]
                                                                 // [764][-------------]
                                                                 // [764][-------------]
                //:::::::::::::::::::::::::::://                 // [764][-------------]
                //:   upper_mid_boundary(UMB)://                 // [764][-------------]
                //:       V                  ://                 // [764][-------------]
                //:[0][1][2][3]::::::::::::::://                 // [764][-------------]
                ///   umb =( i_u32_dun / u_2 );                  // [764][-------------]
                U32   umb =(       oob / u_2 );
                                                                 // [764][-------------]
            //:-------------:#_WHAT_ARE_MY_BOUNDS_#:[764]://     // [764][-------------]

                if( i_u32_dil >= oob ){ i_u32_dil =(oob-u_1); };
            
                U32 o_dil ;                                      // [764][763]
                U32   mul =( u_1 << i_u32_te7 );
            
                if( i_u32_dil < umb ){

                    o_dil =( i_u32_dil * mul );                  // [763][---]
                    if( o_dil >=umb ){ o_dil =(umb-u_1); };
                }else
                if( i_u32_dil >=umb ){

                        U32 m_i=( i_u32_dun-u_1 );
                    // U32 m_i=(       oob-u_1 );
                    
                    U32 sub=((i_u32_dil-umb)*mul);
                    
                    o_dil =( m_i - sub );
                    if( sub > m_i ){
                        o_dil=( umb-u_0 );
                    };;
                };;

